(ns riemann.config)

; #todo: don't hardcode, dump a property file and slurp it here
(def influxdb-config {:host "influxdb"
                      :port 8086
                      :username "root"
                      :password "root"
                      :db "test_metrics"
                      :version :0.9})

; only push every 30s or if 500 events are queued up
(defn influx [opts] (batch 500 30 (influxdb (merge influxdb-config opts))))

(def email (mailer {:host "172.16.60.225"
                    :from "riemann@myapp.net"}))

(logging/init {:file "riemann.log"})

(let [host "0.0.0.0"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))

; expire old events from the index every 5 seconds
(periodically-expire 5)

(let [index (default :ttl 60 (index))]
  (streams
      ; log all events to stdout for debugging
      (where (not (service #"^riemann")) #(info %))
      ; index all events immediately
      index
  )

  (streams
    ; pump riemann stream events into influxdb, throttled at 1 event every 10sec per host/service
    (where (service #"^riemann streams")
      (by [:host :service]
        (throttle 1 10
         (influx {:db "test_metrics" :tags {"app-id" "riemann" "env" "test"}})))
    )
    ; pump all other events unthrottled into influxdb
    (where (not (service #"^riemann"))
      (influx {:tags {"env" "test"}})
    )
  )
)
